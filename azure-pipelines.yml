# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master


stages:
  - stage: build
    jobs:
      - job: build         
        pool:
          vmImage: 'ubuntu-latest'
        steps:
        - bash: echo $SONAR_LOGIN

        - script: dotnet restore Gizmo.sln
          displayName: 'Restore dependencies'

        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'sonar-cloud-public'
            organization: 'jasonchester'
            scannerMode: 'MSBuild'
            projectKey: 'jasonchester_gizmo.sh'
            projectName: 'Gizmo'
            projectVersion: '$(Build.BuildNumber)'

        - script: dotnet build Gizmo.sln
          displayName: 'Build solution'

        - task: SonarCloudAnalyze@1
          displayName: 'Run SonarCloud code analysis'

        - task: SonarCloudPublish@1
          displayName: 'Publish SonarCloud quality gate results'

  - stage: publishgithub
    dependsOn: build
    jobs:
      - job: publish
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: ./build-selfcontained.sh
            displayName: 'build selfcontained release'
            
          # Archive Files
          # Compress files into .7z, .tar.gz, or .zip.
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: './out/gizmo.linux-x64'
              includeRootFolder: false 
              archiveType: 'zip' # Options: zip, 7z, tar, wim
              archiveFile: '$(Build.ArtifactStagingDirectory)/gizmo.linux-x64_$(Build.BuildId).zip' 

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: './out/gizmo.osx-x64'
              includeRootFolder: false 
              archiveType: 'zip' # Options: zip, 7z, tar, wim
              archiveFile: '$(Build.ArtifactStagingDirectory)/gizmo.osx-x64_$(Build.BuildId).zip' 

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: './out/gizmo.win-x64'
              includeRootFolder: false 
              archiveType: 'zip' # Options: zip, 7z, tar, wim
              archiveFile: '$(Build.ArtifactStagingDirectory)/gizmo.win-x64_$(Build.BuildId).zip' 

          - task: GitHubRelease@0
            inputs:
              gitHubConnection: github-jasonchester
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'manual'
              tag: 'gizmo_$(Build.BuildId)'
              title: 'gizmo $(Build.BuildId)'
              isDraft: true
              isPreRelease: true
